2025-03-24 19:20:40,192 - INFO - Total number of parameters: 28905365
2025-03-24 19:20:40,192 - INFO - Trainable parameters: 28905365
2025-03-24 19:20:40,193 - INFO - Model architecture:
UNet(
  (encoder): ModuleList(
    (0): Sequential(
      (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): ReLU(inplace=True)
      (3): SEBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (4): SpectralAttentionBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
        (fc): Sequential(
          (0): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (5): Dropout(p=0.5, inplace=False)
      (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (8): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): ReLU(inplace=True)
      (3): SEBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=128, out_features=8, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=8, out_features=128, bias=False)
          (3): Sigmoid()
        )
      )
      (4): SpectralAttentionBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
        (fc): Sequential(
          (0): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (5): Dropout(p=0.5, inplace=False)
      (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (8): ReLU(inplace=True)
    )
    (2): Sequential(
      (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): ReLU(inplace=True)
      (3): SEBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=256, out_features=16, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=16, out_features=256, bias=False)
          (3): Sigmoid()
        )
      )
      (4): SpectralAttentionBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
        (fc): Sequential(
          (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (5): Dropout(p=0.5, inplace=False)
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (8): ReLU(inplace=True)
    )
    (3): Sequential(
      (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): ReLU(inplace=True)
      (3): SEBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=512, out_features=32, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=32, out_features=512, bias=False)
          (3): Sigmoid()
        )
      )
      (4): SpectralAttentionBlock(
        (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
        (fc): Sequential(
          (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
      )
      (5): Dropout(p=0.5, inplace=False)
      (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (8): ReLU(inplace=True)
    )
  )
  (bottleneck): Sequential(
    (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (2): ReLU(inplace=True)
    (3): SEBlock(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=1024, out_features=64, bias=False)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=64, out_features=1024, bias=False)
        (3): Sigmoid()
      )
    )
    (4): SpectralAttentionBlock(
      (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
      (fc): Sequential(
        (0): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
        (3): Sigmoid()
      )
    )
    (5): Dropout(p=0.5, inplace=False)
    (6): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (8): ReLU(inplace=True)
  )
  (decoder): ModuleList(
    (0): MultiScaleDecoderBlock(
      (up): ConvTranspose2d(1024, 512, kernel_size=(2, 2), stride=(2, 2))
      (conv): Sequential(
        (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): SEBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=512, out_features=32, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=32, out_features=512, bias=False)
            (3): Sigmoid()
          )
        )
        (4): SpectralAttentionBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
          (fc): Sequential(
            (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (5): Dropout(p=0.4, inplace=False)
      )
    )
    (1): AttentionBlock(
      (W_g): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
      (W_x): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
      (psi): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
      (relu): ReLU(inplace=True)
      (sigmoid): Sigmoid()
    )
    (2): MultiScaleDecoderBlock(
      (up): ConvTranspose2d(512, 256, kernel_size=(2, 2), stride=(2, 2))
      (conv): Sequential(
        (0): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): SEBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=256, out_features=16, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=16, out_features=256, bias=False)
            (3): Sigmoid()
          )
        )
        (4): SpectralAttentionBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
          (fc): Sequential(
            (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(32, 256, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (5): Dropout(p=0.4, inplace=False)
      )
    )
    (3): AttentionBlock(
      (W_g): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
      (W_x): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
      (psi): Conv2d(128, 1, kernel_size=(1, 1), stride=(1, 1))
      (relu): ReLU(inplace=True)
      (sigmoid): Sigmoid()
    )
    (4): MultiScaleDecoderBlock(
      (up): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2))
      (conv): Sequential(
        (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): SEBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=128, out_features=8, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=8, out_features=128, bias=False)
            (3): Sigmoid()
          )
        )
        (4): SpectralAttentionBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
          (fc): Sequential(
            (0): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (5): Dropout(p=0.4, inplace=False)
      )
    )
    (5): AttentionBlock(
      (W_g): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
      (W_x): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
      (psi): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
      (relu): ReLU(inplace=True)
      (sigmoid): Sigmoid()
    )
    (6): MultiScaleDecoderBlock(
      (up): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2))
      (conv): Sequential(
        (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): SEBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (fc): Sequential(
            (0): Linear(in_features=64, out_features=4, bias=False)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=4, out_features=64, bias=False)
            (3): Sigmoid()
          )
        )
        (4): SpectralAttentionBlock(
          (avg_pool): AdaptiveAvgPool2d(output_size=(1, None))
          (fc): Sequential(
            (0): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
            (3): Sigmoid()
          )
        )
        (5): Dropout(p=0.4, inplace=False)
      )
    )
    (7): AttentionBlock(
      (W_g): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      (W_x): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      (psi): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
      (relu): ReLU(inplace=True)
      (sigmoid): Sigmoid()
    )
  )
  (final_conv): Sequential(
    (0): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    (1): Sigmoid()
  )
)
